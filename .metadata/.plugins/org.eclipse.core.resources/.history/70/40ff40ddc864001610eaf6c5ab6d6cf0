package com.tutorial.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;

public class SmartEnemy extends GameObject {

	private Handler handler;
	private GameObject player;
	private static int speed = 1;
	
	public SmartEnemy(int x, int y, ID id, Handler handler) {
		super(x, y, id);
		
		for(int i = 0; i < handler.object.size(); i++){
			if(handler.object.get(i).getID() == ID.Player) player = handler.object.get(i);
		}
		
		this.handler = handler;
		
		this.velX = speed;
		this.velY = speed;
	}

	@Override
	public void tick() {
		
		x+=velX;
		y+=velY;
		
		float diffX = x - player.getX()+8;
		float diffY = y - player.getY()+8;
		float distance = (float)(Math.sqrt((y - player.getY())*(y-player.getY()))+((x-player.getX())*(x-player.getX())));
		
		velX = (int) ((-1.0/distance)*diffX);
		velY = (int) ((-1.0/distance)*diffY);
		
		if(y <= 0 || y >= Game.HEIGHT-32) velY *= -1;
		if(x <= 0 || x >= Game.WIDTH -16) velX *= -1;
		
		handler.addObject(new Trail(x, y, ID.Trail, Color.magenta, 16, 16, 0.02f, handler));
	}

	@Override
	public void render(Graphics g) {
		g.setColor(Color.magenta);
		g.fillRect((int)x, (int)y, 16, 16);
		
	}

	@Override
	public Rectangle getBounds() {
		return new Rectangle((int)x, (int)y, 16, 16);
	}

}
